class IThemeManager2 : public IUnknown {
public:
    virtual void Init(enum THEME_MANAGER_INITIALIZATION_FLAGS)() = 0;
    virtual void InitAsync(struct HWND__ *,int)() = 0;
    virtual void Refresh(void)() = 0;
    virtual void RefreshAsync(struct HWND__ *,int)() = 0;
    virtual void RefreshComplete(void)() = 0;
    virtual void GetThemeCount(int *)() = 0;
    virtual void GetTheme(int,struct ITheme * *)() = 0;
    virtual void IsThemeDisabled(int,int *)() = 0;
    virtual void GetCurrentTheme(int *)() = 0;
    virtual void SetCurrentTheme(struct HWND__ *,int,int,enum THEME_APPLY_FLAGS,enum THEMEPACK_FLAGS)() = 0;
    virtual void GetCustomTheme(int *)() = 0;
    virtual void GetDefaultTheme(int *)() = 0;
    virtual void CreateThemePack(struct HWND__ *,unsigned short const *,enum THEMEPACK_FLAGS)() = 0;
    virtual void CloneAndSetCurrentTheme(struct HWND__ *,unsigned short const *,unsigned short * *)() = 0;
    virtual void InstallThemePack(struct HWND__ *,unsigned short const *,int,enum THEMEPACK_FLAGS,unsigned short * *,struct ITheme * *)() = 0;
    virtual void DeleteTheme(unsigned short const *)() = 0;
    virtual void OpenTheme(struct HWND__ *,unsigned short const *,enum THEMEPACK_FLAGS)() = 0;
    virtual void AddAndSelectTheme(struct HWND__ *,unsigned short const *,enum THEME_APPLY_FLAGS,enum THEMEPACK_FLAGS)() = 0;
    virtual void SQMCurrentTheme(void)() = 0;
    virtual void ExportRoamingThemeToStream(struct IStream *,int)() = 0;
    virtual void ImportRoamingThemeFromStream(struct IStream *,int)() = 0;
    virtual void UpdateColorSettingsForLogonUI(void)() = 0;
    virtual void GetDefaultThemeId(struct _GUID *)() = 0;
    virtual void UpdateCustomTheme(void)() = 0;
};

class ITheme : public IUnknown {
public:
    virtual void get_DisplayName(unsigned short * *)() = 0;
    virtual void put_DisplayName(unsigned short *)() = 0;
    virtual void get_VisualStyle(unsigned short * *)() = 0;
    virtual void put_VisualStyle(unsigned short *)() = 0;
    virtual void get_VisualStyleColor(unsigned short * *)() = 0;
    virtual void put_VisualStyleColor(unsigned short *)() = 0;
    virtual void get_VisualStyleSize(unsigned short * *)() = 0;
    virtual void put_VisualStyleSize(unsigned short *)() = 0;
    virtual void get_VisualStyleVersion(int *)() = 0;
    virtual void put_VisualStyleVersion(int)() = 0;
    virtual void get_ColorizationColor(unsigned long *)() = 0;
    virtual void put_ColorizationColor(unsigned long)() = 0;
    virtual void get_ThemeId(struct _GUID *)() = 0;
    virtual void put_ThemeId(struct _GUID const &)() = 0;
    virtual void get_AppMode(int *)() = 0;
    virtual void put_AppMode(int)() = 0;
    virtual void get_SystemMode(int *)() = 0;
    virtual void put_SystemMode(int)() = 0;
    virtual void get_Background(unsigned short * *)() = 0;
    virtual void put_Background(unsigned short *)() = 0;
    virtual void get_BackgroundPosition(enum DESKTOP_WALLPAPER_POSITION *)() = 0;
    virtual void put_BackgroundPosition(enum DESKTOP_WALLPAPER_POSITION)() = 0;
    virtual void get_BackgroundWriteTime(struct _FILETIME *)() = 0;
    virtual void put_BackgroundWriteTime(struct _FILETIME const *)() = 0;
    virtual void ClearBackgroundWriteTime(void)() = 0;
    virtual void get_SlideshowSettings(struct ISlideshowSettings * *)() = 0;
    virtual void put_SlideshowSettings(struct ISlideshowSettings *)() = 0;
    virtual void get_SlideshowSourceDirectory(unsigned short * *)() = 0;
    virtual void put_SlideshowSourceDirectory(unsigned short *)() = 0;
    virtual void get_RSSFeed(unsigned short * *)() = 0;
    virtual void IsSlideshowEnabled(int *)() = 0;
    virtual void GetSlideshowSettingsWithoutFiles(struct ISlideshowSettings * *)() = 0;
    virtual void GetPath(short,unsigned short * *)() = 0;
    virtual void SetPath(unsigned short *)() = 0;
    virtual void GetCursor(unsigned short *,unsigned short * *)() = 0;
    virtual void SetCursor(unsigned short *,unsigned short *)() = 0;
    virtual void GetSoundSchemeName(unsigned short * *)() = 0;
    virtual void SetSoundSchemeName(unsigned short *)() = 0;
    virtual void GetSound(unsigned short *,unsigned int,unsigned short * *)() = 0;
    virtual void SetSound(unsigned short *,unsigned short *)() = 0;
    virtual void GetAllSoundEvents(unsigned short * *)() = 0;
    virtual void GetDesktopIcon(unsigned short *,int,unsigned short * *)() = 0;
    virtual void GetDefaultDesktopIcon(unsigned short *,unsigned short * *)() = 0;
    virtual void SetDesktopIcon(unsigned short *,unsigned short *)() = 0;
    virtual void GetCategory(enum tagTHEMECAT *)() = 0;
    virtual void GetLogonBackgroundFlag(int *)() = 0;
    virtual void SetLogonBackgroundFlag(void)() = 0;
    virtual void ClearLogonBackgroundFlag(void)() = 0;
    virtual void GetAutoColorization(int *)() = 0;
    virtual void SetAutoColorization(int)() = 0;
    virtual void GetMultimonBackgroundsEnabled(int *)() = 0;
    virtual void SetMultimonBackgroundsEnabled(int)() = 0;
    virtual void GetMultimonBackground(unsigned int,unsigned short * *)() = 0;
    virtual void SetMultimonBackground(unsigned int,unsigned short *)() = 0;
    virtual void GetHighContrast(int *)() = 0;
    virtual void SetHighContrast(int)() = 0;
    virtual void GetThemeMagicValue(unsigned short * *)() = 0;
    virtual void SetThemeMagicValue(unsigned short *)() = 0;
    virtual void GetThemeColor(unsigned short const *,unsigned short * *)() = 0;
    virtual void GetThemeImage(int,struct HBITMAP__ * *)() = 0;
    virtual void GetWindowColorPreview(struct HBITMAP__ * *)() = 0;
    virtual void GetBackgroundColor(unsigned long *)() = 0;
    virtual void GetColor(unsigned int,unsigned long *)() = 0;
    virtual void GetBrandLogo(unsigned short * *)() = 0;
    virtual void SetBrandLogo(unsigned short *)() = 0;
    virtual void ClearBrandLogo(void)() = 0;
    virtual void ClearScreenSaver(void)() = 0;
    virtual void GetScreenSaverName(unsigned short * *)() = 0;
    virtual void GetBackgroundPreview(struct HBITMAP__ * *)() = 0;
    virtual void Copy(struct ITheme * *)() = 0;
    virtual void SetThemeColor(unsigned short const *,unsigned long)() = 0;
    virtual void GetThumbnailSlideshowSettings(struct ISlideshowSettings * *)() = 0;
};
